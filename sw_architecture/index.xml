<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>3. S/W Architecture on Developer&#39;s Delight</title>
    <link>https://linuxias.github.io/sw_architecture/</link>
    <description>Recent content in 3. S/W Architecture on Developer&#39;s Delight</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Fri, 10 Jan 2020 23:15:54 +0900</lastBuildDate>
    
	<atom:link href="https://linuxias.github.io/sw_architecture/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>소프트웨어 설계의 부패</title>
      <link>https://linuxias.github.io/sw_architecture/sw_design_corruption/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://linuxias.github.io/sw_architecture/sw_design_corruption/</guid>
      <description>소프트웨어 설계는 무엇일까? 소스코드 작성하기 전 UML 다이어그램을 작성하는 것? 가끔 몇몇 개발자 분들과 이야기를 할 때 설계는 UML 다이어그램을 작성하는 것이라는 말을 듣는다. 그럼 설계는 UML 다이어그램과 동일 시 할 수 있는가에 대해서 고민해보면 그렇지 않다 라는 결론이 나올 수 있다. 다이어그램은 설계에서 부수적인 부분일 뿐 설계 그 자체가 될 수는 없다고 생각한다. 소프트웨어 설계는 매우 추상적인 것이라 생각한다. 사용자 요구사항부터 시나리오, 모듈, 클래스, 메소드와 더불어 어떠한 형태와 구조를 가질 것인지 프로그램 전체의 형태, 구조와도 관련이 있다고 생각한다.</description>
    </item>
    
  </channel>
</rss>